{"version":3,"sources":["webpack://evenues/./Client/Pages/WriteReview.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAoD;AACJ;AAGzC,MAAM,kBAAkB;IAErB,IAAI;;YACN,IAAI,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAsB,CAAC;YAChF,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvB,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;aACrE;QACL,CAAC;KAAA;IAEK,IAAI;;YACN,IAAI,WAAW,GAAG,IAAI,4DAAW,CAAC,iBAAiB,CAAC,CAAC;YACrD,IAAI,MAAM,WAAW,CAAC,YAAY,EAAE,EAAE;gBAClC,IAAI,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,6BAA6B,CAAqB,CAAC;gBAClG,MAAM,UAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK;oBAC5F,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAqB,CAAC;oBAClF,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC1B,CAAC,CAAC,CAAC;gBACH,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACpC,IAAI,QAAQ,GAAG,MAAM,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACb,IAAI,mBAAmB,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAmB,CAAC;oBAC1F,IAAI,mBAAmB,KAAK,IAAI,EAAE;wBAC9B,mBAAmB,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC9C,mBAAmB,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;qBAC/C;oBACD,IAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAmB,CAAC;oBAC9E,IAAI,WAAW,KAAK,IAAI,EAAE;wBACtB,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;qBACtC;iBACJ;qBAAM;oBACH,MAAM,WAAW,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;iBACzD;aACJ;QACL,CAAC;KAAA;CACJ;AACD,4DAAU,CAAC,GAAS,EAAE;IAClB,IAAI,IAAI,GAAG,IAAI,kBAAkB,EAAE,CAAC;IACpC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AACtB,CAAC,EAAC,CAAC","file":"Pages/WriteReview.js","sourcesContent":["import { FormManager } from '../Common/FormManager';\r\nimport { onDocReady } from '../Common/UiHelper';\r\nimport { } from 'recaptcha-v3';\r\n\r\nexport class WriteReviewManager {\r\n\r\n    async Init(): Promise<void> {\r\n        let submitButton = document.getElementById(\"submitButton\") as HTMLButtonElement;\r\n        if (submitButton !== null) {\r\n            submitButton.addEventListener(\"click\", (e: Event) => this.Save());\r\n        }\r\n    }\r\n\r\n    async Save(): Promise<void> {\r\n        let formManager = new FormManager('WriteReviewForm');\r\n        if (await formManager.ValidateForm()) {\r\n            let recaptchaSiteKey = document.getElementById('ReviewView_ReCaptchaSiteKey') as HTMLInputElement;\r\n            await grecaptcha.execute(recaptchaSiteKey.value, { action: 'WriteReview' }).then(function (token) {\r\n                let captcha = document.getElementById('ReviewView_ReCaptcha') as HTMLInputElement;\r\n                captcha.value = token;\r\n            });\r\n            let url = `${window.location.href}`;\r\n            let response = await formManager.SubmitForm(url);\r\n            if (response.ok) {\r\n                let headerMessagElement = document.getElementById('HeaderAlertMessage') as HTMLDivElement;\r\n                if (headerMessagElement !== null) {\r\n                    headerMessagElement.innerText = response.data;\r\n                    headerMessagElement.style.display = 'block';\r\n                }\r\n                let formElement = document.getElementById('WriteReviewDiv') as HTMLDivElement;\r\n                if (formElement !== null) {\r\n                    formElement.style.display = 'none';\r\n                }\r\n            } else {\r\n                await formManager.ShowSuccessFailureMessage(response);\r\n            }\r\n        }\r\n    }\r\n}\r\nonDocReady(async () => {\r\n    let page = new WriteReviewManager();\r\n    await page.Init();\r\n});"],"sourceRoot":""}