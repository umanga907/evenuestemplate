{"version":3,"sources":["webpack://evenues/./Client/Pages/VenueProfile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAoD;AACJ;AAGzC,MAAM,mBAAmB;IAEtB,IAAI;;YACN,IAAI,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAsB,CAAC;YACvF,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvB,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;aACrE;YACD,IAAI,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAqB,CAAC;YACvF,IAAI,gBAAgB,KAAK,IAAI,EAAE;gBAC3B,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;aAC7G;QACL,CAAC;KAAA;IAEK,IAAI;;YACN,IAAI,WAAW,GAAG,IAAI,4DAAW,CAAC,aAAa,CAAC,CAAC;YACjD,IAAI,MAAM,WAAW,CAAC,YAAY,EAAE,EAAE;gBAClC,IAAI,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,+CAA+C,CAAqB,CAAC;gBACpH,MAAM,UAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK;oBAC7F,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,wCAAwC,CAAqB,CAAC;oBACpG,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC1B,CAAC,CAAC,CAAC;gBACH,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,cAAc,CAAC;gBAChD,IAAI,QAAQ,GAAG,MAAM,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACb,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAqB,CAAC;oBACnE,IAAI,IAAI,IAAI,IAAI,EAAE;wBACd,IAAI,iBAAiB,GAAG,GAAG,IAAI,CAAC,KAAK,mBAAmB,QAAQ,CAAC,IAAI,EAAE,CAAC;wBACxE,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,iBAAiB,CAAC;qBAC5C;yBAAM;wBACH,KAAK,CAAC,6BAA6B,CAAC,CAAC;qBACxC;iBACJ;qBAAM;oBACH,MAAM,WAAW,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;iBACzD;aACJ;QACL,CAAC;KAAA;IAEK,iBAAiB,CAAC,KAAa;;YACjC,IAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,mDAAmD,CAAqB,CAAC;YACnH,IAAI,WAAW,KAAK,IAAI,EAAE;gBACtB,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;aAC7B;QACL,CAAC;KAAA;CACJ;AACD,4DAAU,CAAC,GAAS,EAAE;IAClB,IAAI,IAAI,GAAG,IAAI,mBAAmB,EAAE,CAAC;IACrC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AACtB,CAAC,EAAC,CAAC","file":"Pages/venueProfile.js","sourcesContent":["import { FormManager } from '../Common/FormManager';\r\nimport { onDocReady } from '../Common/UiHelper';\r\nimport { } from 'recaptcha-v3';\r\n\r\nexport class VenueProfileManager {\r\n\r\n    async Init(): Promise<void> {\r\n        let submitButton = document.getElementById(\"submitInquiryButton\") as HTMLButtonElement;\r\n        if (submitButton !== null) {\r\n            submitButton.addEventListener(\"click\", (e: Event) => this.Save());\r\n        }\r\n        let availabilityDate = document.getElementById(\"AvailabilityDate\") as HTMLInputElement;\r\n        if (availabilityDate !== null) {\r\n            availabilityDate.addEventListener(\"change\", (e: Event) => this.UpdateDesiredDate(availabilityDate.value));\r\n        }\r\n    }\r\n\r\n    async Save(): Promise<void> {\r\n        let formManager = new FormManager('InquiryForm');\r\n        if (await formManager.ValidateForm()) {\r\n            let recaptchaSiteKey = document.getElementById('VenueProfileView_InquiryView_ReCaptchaSiteKey') as HTMLInputElement;\r\n            await grecaptcha.execute(recaptchaSiteKey.value, { action: 'VenueProfile' }).then(function (token) {\r\n                let captcha = document.getElementById('VenueProfileView_InquiryView_ReCaptcha') as HTMLInputElement;\r\n                captcha.value = token;\r\n            });\r\n            let url = `${window.location.href}VenueProfile`;\r\n            let response = await formManager.SubmitForm(url);\r\n            if (response.ok) {\r\n                let host = document.getElementById(\"HostName\") as HTMLInputElement;\r\n                if (host != null) {\r\n                    let inquirySummaryUrl = `${host.value}/InquirySummary/${response.data}`;\r\n                    window.location.href = inquirySummaryUrl;\r\n                } else {\r\n                    alert('Host Name is not configured');\r\n                }\r\n            } else {\r\n                await formManager.ShowSuccessFailureMessage(response);\r\n            }\r\n        }\r\n    }\r\n\r\n    async UpdateDesiredDate(value: string): Promise<void> {\r\n        let desiredDate = document.getElementById(\"VenueProfileView_InquiryView_PreferredMeetingDate\") as HTMLInputElement;\r\n        if (desiredDate !== null) {\r\n            desiredDate.value = value;\r\n        }\r\n    }\r\n}\r\nonDocReady(async () => {\r\n    let page = new VenueProfileManager();\r\n    await page.Init();\r\n});"],"sourceRoot":""}