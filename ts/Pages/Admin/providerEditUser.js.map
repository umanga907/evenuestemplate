{"version":3,"sources":["webpack://evenues/./Client/Pages/Admin/ProviderEditUser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAuD;AACA;AACJ;AAE5C,MAAM,uBAAuB;IAK1B,IAAI;;YACN,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC;YAC5E,IAAI,UAAU,KAAK,IAAI,EAAE;gBACrB,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;aACnE;YAED,IAAI,sBAAsB,GAAG,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAsB,CAAC;YACpG,IAAI,sBAAsB,KAAK,IAAI,EAAE;gBACjC,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aACvF;YAED,IAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAqB,CAAC;YAC7E,IAAI,CAAC,YAAY,GAAG,IAAI,4DAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAqB,CAAC;YAChF,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC;QAC7C,CAAC;KAAA;IAEK,IAAI;;YACN,IAAI,WAAW,GAAG,IAAI,4DAAW,CAAC,gBAAgB,CAAC,CAAC;YACpD,IAAI,MAAM,WAAW,CAAC,YAAY,EAAE,EAAE;gBAClC,IAAI,QAAQ,GAAG,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;gBAC9C,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACb,KAAK,CAAC,yCAAyC,CAAC,CAAC;oBACjD,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;iBAC5B;qBAAM;oBACH,MAAM,WAAW,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;iBACzD;aACJ;QACL,CAAC;KAAA;IAEK,WAAW,CAAC,CAAQ;;YACtB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,oCAAoC,CAAqB,CAAC;YAC9F,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;gBACzE,KAAK,CAAC,oCAAoC,CAAC,CAAC;gBAC5C,OAAO;aACV;YAED,IAAI,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,uCAAuC,CAAqB,CAAC;YACpG,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,IAAI,QAAQ,CAAC,KAAK,KAAK,EAAE,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE;gBAClF,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBAC3C,OAAO;aACV;YAED,IAAI,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,8CAA8C,CAAqB,CAAC;YAClH,IAAI,eAAe,CAAC,KAAK,KAAK,SAAS,IAAI,eAAe,CAAC,KAAK,KAAK,EAAE,IAAI,eAAe,CAAC,KAAK,KAAK,IAAI,EAAE;gBACvG,KAAK,CAAC,uCAAuC,CAAC,CAAC;gBAC/C,OAAO;aACV;YACD,IAAI,QAAQ,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,EAAE;gBAC1C,KAAK,CAAC,uCAAuC,CAAC,CAAC;gBAC/C,OAAO;aACV;YAED,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,0BAA0B,CAAqB,CAAC;YACtF,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,eAAe,wCAAwC,OAAO,CAAC,KAAK,UAAU,KAAK,CAAC,KAAK,aAAa,QAAQ,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;YACpL,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACb,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBAC1C,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;aAC5B;iBAAM;gBACH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAChC;QAEL,CAAC;KAAA;CACJ;AACD,4DAAU,CAAC,GAAS,EAAE;IAClB,IAAI,IAAI,GAAG,IAAI,uBAAuB,EAAE,CAAC;IACzC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AACtB,CAAC,EAAC,CAAC","file":"Pages/Admin/providerEditUser.js","sourcesContent":["import { HttpManager } from \"../../Common/HttpManager\";\r\nimport { FormManager } from '../../Common/FormManager';\r\nimport { onDocReady } from '../../Common/UiHelper';\r\n\r\nexport class ProviderEditUserManager {\r\n\r\n    private _httpManager: HttpManager;\r\n    private _hostServiceUrl: string;\r\n\r\n    async Init(): Promise<void> {\r\n        let saveButton = document.getElementById(\"saveButton\") as HTMLButtonElement;\r\n        if (saveButton !== null) {\r\n            saveButton.addEventListener(\"click\", (e: Event) => this.Save());\r\n        }\r\n\r\n        let updateLoginEmailButton = document.getElementById(\"updateLoginEmailButton\") as HTMLButtonElement;\r\n        if (updateLoginEmailButton !== null) {\r\n            updateLoginEmailButton.addEventListener(\"click\", (e: Event) => this.UpdateEmail(e));\r\n        }\r\n\r\n        let accessToken = document.getElementById(\"AccessToken\") as HTMLInputElement;\r\n        this._httpManager = new HttpManager(accessToken.value);\r\n        let hostService = document.getElementById(\"HostServiceUrl\") as HTMLInputElement;\r\n        this._hostServiceUrl = hostService.value;\r\n    }\r\n\r\n    async Save(): Promise<void> {\r\n        let formManager = new FormManager('userEditorForm');\r\n        if (await formManager.ValidateForm()) {\r\n            let response = await formManager.SubmitForm();\r\n            if (response.ok) {\r\n                alert('Users & Passwords updated successfully!');\r\n                window.location.reload();\r\n            } else {\r\n                await formManager.ShowSuccessFailureMessage(response);\r\n            }\r\n        }\r\n    }\r\n\r\n    async UpdateEmail(e: Event): Promise<void> {\r\n        e.preventDefault();\r\n        let email = document.getElementById(\"UserAddEditModel_LoginContactEmail\") as HTMLInputElement;\r\n        if (email.value === undefined || email.value === '' || email.value === null) {\r\n            alert(\"Please enter a valid email address\");\r\n            return;\r\n        }\r\n\r\n        let password = document.getElementById(\"UserAddEditModel_LoginContactPassword\") as HTMLInputElement;\r\n        if (password.value === undefined || password.value === '' || password.value === null) {\r\n            alert(\"Please enter a valid New Passwrod\");\r\n            return;\r\n        }\r\n\r\n        let confirmPassword = document.getElementById(\"UserAddEditModel_LoginContactConfirmPassword\") as HTMLInputElement;\r\n        if (confirmPassword.value === undefined || confirmPassword.value === '' || confirmPassword.value === null) {\r\n            alert(\"Please enter a valid Confirm Passwrod\");\r\n            return;\r\n        }\r\n        if (password.value !== confirmPassword.value) {\r\n            alert(\"Please enter a valid Confirm Passwrod\");\r\n            return;\r\n        }\r\n\r\n        let spaceId = document.getElementById(\"UserAddEditModel_SpaceId\") as HTMLInputElement;\r\n        let response = await this._httpManager.postJson(`${this._hostServiceUrl}/v1/account/updateLoginEmail?spaceId=${spaceId.value}&email=${email.value}&password=${password.value}`, ``);\r\n        if (response.ok) {\r\n            alert(\"Login email updated sucessfully!\");\r\n            window.location.reload();\r\n        } else {\r\n            alert(response.data.Message);\r\n        }\r\n        \r\n    }\r\n}\r\nonDocReady(async () => {\r\n    let page = new ProviderEditUserManager();\r\n    await page.Init();\r\n});"],"sourceRoot":""}