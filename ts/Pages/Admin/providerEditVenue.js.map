{"version":3,"sources":["webpack://evenues/./Client/Pages/Admin/ProviderEditVenue.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAuD;AACJ;AAE5C,MAAM,wBAAwB;IAE3B,IAAI;;YACN,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC;YAC5E,IAAI,UAAU,KAAK,IAAI,EAAE;gBACrB,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;aACnE;YAED,IAAI,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAsB,CAAC;YAChF,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvB,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;aACvE;QAEL,CAAC;KAAA;IAEK,IAAI;;YACN,IAAI,WAAW,GAAG,IAAI,4DAAW,CAAC,iBAAiB,CAAC,CAAC;YACrD,IAAI,MAAM,WAAW,CAAC,YAAY,EAAE,EAAE;gBAClC,IAAI,QAAQ,GAAG,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;gBAC9C,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACb,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAqB,CAAC;oBACnE,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAqB,CAAC;oBAC/D,IAAI,IAAI,IAAI,IAAI,EAAE;wBACd,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,UAAU,EAAE;4BACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,uBAAuB,CAAC;yBAC/D;6BAAM;4BACH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,cAAc,CAAC;yBACtD;qBACJ;yBAAM;wBACH,KAAK,CAAC,6BAA6B,CAAC,CAAC;qBACxC;iBACJ;qBAAM;oBACH,MAAM,WAAW,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;iBACzD;aACJ;QACL,CAAC;KAAA;IAEK,MAAM;;YACR,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAqB,CAAC;YACnE,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAqB,CAAC;YAC/D,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,UAAU,EAAE;oBACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,uBAAuB,CAAC;iBAC/D;qBAAM;oBACH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,cAAc,CAAC;iBACtD;aACJ;QACL,CAAC;KAAA;CAEJ;AACD,4DAAU,CAAC,GAAS,EAAE;IAClB,IAAI,IAAI,GAAG,IAAI,wBAAwB,EAAE,CAAC;IAC1C,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AACtB,CAAC,EAAC,CAAC","file":"Pages/Admin/providerEditVenue.js","sourcesContent":["import { FormManager } from '../../Common/FormManager';\r\nimport { onDocReady } from '../../Common/UiHelper';\r\n\r\nexport class ProviderEditVenueManager {\r\n\r\n    async Init(): Promise<void> {\r\n        let saveButton = document.getElementById(\"saveButton\") as HTMLButtonElement;\r\n        if (saveButton !== null) {\r\n            saveButton.addEventListener(\"click\", (e: Event) => this.Save());\r\n        }\r\n\r\n        let cancelButton = document.getElementById(\"cancelButton\") as HTMLButtonElement;\r\n        if (cancelButton !== null) {\r\n            cancelButton.addEventListener(\"click\", (e: Event) => this.Cancel());\r\n        }\r\n\r\n    }\r\n\r\n    async Save(): Promise<void> {\r\n        let formManager = new FormManager('venueEditorForm');\r\n        if (await formManager.ValidateForm()) {\r\n            let response = await formManager.SubmitForm();\r\n            if (response.ok) {\r\n                let host = document.getElementById(\"HostName\") as HTMLInputElement;\r\n                let role = document.getElementById(\"Role\") as HTMLInputElement;\r\n                if (host != null) {\r\n                    if (role.value.toLowerCase() === \"provider\") {\r\n                        window.location.href = `${host.value}/admin/provider/venue`;\r\n                    } else {\r\n                        window.location.href = `${host.value}/admin/venue`;\r\n                    }\r\n                } else {\r\n                    alert('Host Name is not configured');\r\n                }\r\n            } else {\r\n                await formManager.ShowSuccessFailureMessage(response);\r\n            }\r\n        }\r\n    }\r\n\r\n    async Cancel(): Promise<void> {\r\n        let host = document.getElementById(\"HostName\") as HTMLInputElement;\r\n        let role = document.getElementById(\"Role\") as HTMLInputElement;\r\n        if (host != null) {\r\n            if (role.value.toLowerCase() === \"provider\") {\r\n                window.location.href = `${host.value}/admin/provider/venue`;\r\n            } else {\r\n                window.location.href = `${host.value}/admin/venue`;\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\nonDocReady(async () => {\r\n    let page = new ProviderEditVenueManager();\r\n    await page.Init();\r\n});"],"sourceRoot":""}