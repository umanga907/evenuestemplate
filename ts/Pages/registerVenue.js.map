{"version":3,"sources":["webpack://evenues/./Client/Pages/RegisterVenue.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAoD;AACJ;AAEzC,MAAM,oBAAoB;IAEvB,IAAI;;YACN,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,2BAA2B,CAAsB,CAAC;YAC3F,IAAI,UAAU,KAAK,IAAI,EAAE;gBACrB,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;aACnE;YAED,sEAAsE;YACtE,0BAA0B;YAC1B,oEAAoE;YACpE,GAAG;YAEH,sEAAsE;YACtE,0BAA0B;YAC1B,oEAAoE;YACpE,GAAG;QACP,CAAC;KAAA;IAEK,IAAI;;YACN,IAAI,WAAW,GAAG,IAAI,4DAAW,CAAC,iBAAiB,CAAC,CAAC;YACrD,IAAI,MAAM,WAAW,CAAC,YAAY,EAAE,EAAE;gBAClC,IAAI,QAAQ,GAAG,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;gBAC9C,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACb,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAqB,CAAC;oBACnE,IAAI,IAAI,IAAI,IAAI,EAAE;wBACd,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,6BAA6B,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;qBAClG;yBAAM;wBACH,KAAK,CAAC,6BAA6B,CAAC,CAAC;qBACxC;iBACJ;qBAAM;oBACH,MAAM,WAAW,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;iBACzD;aACJ;QACL,CAAC;KAAA;CAEJ;AACD,4DAAU,CAAC,GAAS,EAAE;IAClB,IAAI,IAAI,GAAG,IAAI,oBAAoB,EAAE,CAAC;IACtC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AACtB,CAAC,EAAC,CAAC","file":"Pages/registerVenue.js","sourcesContent":["import { FormManager } from '../Common/FormManager';\r\nimport { onDocReady } from '../Common/UiHelper';\r\n\r\nexport class RegisterVenueManager {\r\n\r\n    async Init(): Promise<void> {\r\n        let nextButton = document.getElementById(\"registerVenueSubmitButton\") as HTMLButtonElement;\r\n        if (nextButton !== null) {\r\n            nextButton.addEventListener(\"click\", (e: Event) => this.Save());\r\n        }\r\n\r\n        //let step2Tab = document.getElementById(\"step2Tab\") as HTMLLIElement;\r\n        //if (step2Tab !== null) {\r\n        //    step2Tab.addEventListener(\"click\", (e: Event) => this.Save());\r\n        //}\r\n\r\n        //let step3Tab = document.getElementById(\"step3Tab\") as HTMLLIElement;\r\n        //if (step3Tab !== null) {\r\n        //    step3Tab.addEventListener(\"click\", (e: Event) => this.Save());\r\n        //}\r\n    }\r\n\r\n    async Save(): Promise<void> {\r\n        let formManager = new FormManager('venueEditorForm');\r\n        if (await formManager.ValidateForm()) {\r\n            let response = await formManager.SubmitForm();\r\n            if (response.ok) {\r\n                let host = document.getElementById(\"HostName\") as HTMLInputElement;\r\n                if (host != null) {\r\n                    let data = JSON.parse(response.data)\r\n                    window.location.href = `${host.value}/meeting-space/register/2/${data.SpaceId}/${data.RoomId}`;\r\n                } else {\r\n                    alert('Host Name is not configured');\r\n                }\r\n            } else {\r\n                await formManager.ShowSuccessFailureMessage(response);\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\nonDocReady(async () => {\r\n    let page = new RegisterVenueManager();\r\n    await page.Init();\r\n});"],"sourceRoot":""}